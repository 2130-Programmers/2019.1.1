// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc0.DriveTrainEmmet.subsystems;


import org.usfirst.frc0.DriveTrainEmmet.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import edu.wpi.first.wpilibj.Spark;
import edu.wpi.first.wpilibj.SpeedController;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class subbyBoy extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private Spark speedyBoyLR;
    private Spark speedyBoyLF;
    private SpeedControllerGroup speedyBoyGroupL;
    private Spark speedyBoyRR;
    private Spark speedyBoyRF;
    private SpeedControllerGroup speedyBoyGroupR;
    private DifferentialDrive diffyBoy;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public subbyBoy() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        speedyBoyLR = new Spark(0);
        addChild("speedyBoyLR",speedyBoyLR);
        speedyBoyLR.setInverted(false);
        
        speedyBoyLF = new Spark(1);
        addChild("speedyBoyLF",speedyBoyLF);
        speedyBoyLF.setInverted(false);
        
        speedyBoyGroupL = new SpeedControllerGroup(speedyBoyLR, speedyBoyLF  );
        addChild("speedyBoyGroupL",speedyBoyGroupL);
        
        
        speedyBoyRR = new Spark(2);
        addChild("speedyBoyRR",speedyBoyRR);
        speedyBoyRR.setInverted(false);
        
        speedyBoyRF = new Spark(3);
        addChild("speedyBoyRF",speedyBoyRF);
        speedyBoyRF.setInverted(false);
        
        speedyBoyGroupR = new SpeedControllerGroup(speedyBoyRR, speedyBoyRF  );
        addChild("speedyBoyGroupR",speedyBoyGroupR);
        
        
        diffyBoy = new DifferentialDrive(speedyBoyGroupL, speedyBoyLR);
        addChild("diffyBoy",diffyBoy);
        diffyBoy.setSafetyEnabled(true);
        diffyBoy.setExpiration(0.1);
        diffyBoy.setMaxOutput(1.0);

        

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new tommytheCommyBoy());

        // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

}

