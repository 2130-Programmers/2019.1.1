// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

//some body once told me the world is gonna roll me i ain't the sharpest tool in the shed, she was looking kinda dumb with her finger and her thumb in the shape of an L on her forhead, yea well the years start coming and they dont stop coming bent to the rules and i hit the ground running didnt make sense not to live for fun your brain get smart but your head gets dumb so much to see so much to do so whats wron with taking the backstreet, you'll never know if you dont go, you never shine if you dont glow, so hey now your an all star get this game on go play, hey now your a rockstar get this show on, get paid, and all that glitters is gone, only shooting starts break the mollllllld. Its a cold place, and i hear it gets colder if your bundled up now wait till you get older but the media men beg to differ, juging by the hole in the satilite filter, the ice we scate is getting pretty thin the waters getting warm so you might as well swim, my worlds on fire, how about yours, thats the way i like it and i never get bored, soooo hey now your an all star get your game on go pla, hey now your a rock star get this show on get paid, and all the glitters is gone only shoting stars break the mollld, some body once asked could i spare some change for gas i need to get myself away from this place, im like yup what a concept i could use a little fuel myself and we could all use a little change well the years start coming and they dont start coming bent to the rules and i hit the ground running didn;t make sense not to live for fun, your brain gets smart but your head gets dumb so much to see so much to do so whats wrong with taking the backstreet youll never know if you dont go, youll never shine if you dont glow, so hey now your an allstart get this game on go play, hey now your a rock star get this show on go play, and all that glitters is gold, only shooting stars break the mold, and all the glitters is gold, only shooting stars break the mold.


package org.usfirst.frc2130.coryDrivingTrains.subsystems;


import org.usfirst.frc2130.coryDrivingTrains.commands.*;
import edu.wpi.first.wpilibj.livewindow.LiveWindow;
import edu.wpi.first.wpilibj.command.Subsystem;
import edu.wpi.first.wpilibj.PIDOutput;
import edu.wpi.first.wpilibj.PIDSource;
import org.usfirst.frc2130.coryDrivingTrains.Robot;

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS
import com.ctre.phoenix.motorcontrol.can.WPI_TalonSRX;
import edu.wpi.first.wpilibj.SpeedControllerGroup;
import edu.wpi.first.wpilibj.drive.DifferentialDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS


/**
 *
 */
public class diffDriveSub extends Subsystem {

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTANTS

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS
    private WPI_TalonSRX lF;
    private WPI_TalonSRX lR;
    private SpeedControllerGroup speedContGroupL;
    private WPI_TalonSRX rF;
    private WPI_TalonSRX rR;
    private SpeedControllerGroup speedContGroupR;
    private DifferentialDrive diffDrive;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DECLARATIONS

    public static final int kPIDLoopIdk = 0;

    public diffDriveSub() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
        lF = new WPI_TalonSRX(1);
        
        
        
        lR = new WPI_TalonSRX(2);
        
        
        
        speedContGroupL = new SpeedControllerGroup(lF, lR  );
        addChild("speedContGroupL",speedContGroupL);
        
        
        rF = new WPI_TalonSRX(3);
        
        
        
        rR = new WPI_TalonSRX(4);
        
        
        
        speedContGroupR = new SpeedControllerGroup(rF, rR  );
        addChild("speedContGroupR",speedContGroupR);
        
        
        diffDrive = new DifferentialDrive(speedContGroupL, speedContGroupR);
        addChild("diffDrive",diffDrive);
        diffDrive.setSafetyEnabled(true);
        diffDrive.setExpiration(0.1);
        diffDrive.setMaxOutput(1.0);

        

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    }

    @Override
    public void initDefaultCommand() {
        // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        setDefaultCommand(new driveTrainCommand());

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DEFAULT_COMMAND

        // Set the default command for a subsystem here.
        // setDefaultCommand(new MySpecialCommand());
    }

    @Override
    public void periodic() {
        // Put code here to be run every loop

    }

    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CMDPIDGETTERS

    // Put methods for controlling this subsystem
    // here. Call these from Commands.

    public void joystickDriver()
    {
        diffDrive.arcadeDrive(Robot.oi.joyfull.getRawAxis(1), 
                              Robot.oi.joyfull.getRawAxis(0));
    }

    //defining how fast the motor goes when put into button command

    public void enableMotorsFor()
    {
        lF.set(.5);
    }

    public void enableMotorsBack()
    {
        lF.set(-.5);
    }
    public void stopMotors() {
        lF.set(0);
    }

    //If statment says when two buttons are pressed run two motors

    public void ifStatement() {
        if(Robot.oi.joy4value() == true && Robot.oi.joy5value() == true) {
            lF.set(.5);
            rR.set(.5);
        }
    }
    public void movemoter(){
        if(encoderPosition() <= -1000) {
            rF.set(0);
        }else {
            rF.set(.5);

        }
        
        
    }
    public void zeroEncoder() {
        rF.setSelectedSensorPosition(0, kPIDLoopIdk, 0);
    }

    public double encoderPosition(){
        return rF.getSelectedSensorPosition(0);
    }
}

/* public double returnSomething() {
      return sensor.output;
} */
